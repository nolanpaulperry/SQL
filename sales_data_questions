-- I wrote this SQL code to answer several questions regarding sales from different locations and time periods. Database provided by Charlotte Chaze.



-- How many orders were placed in January?

 SELECT COUNT(orderID) AS Total_Sales
 FROM BIT_DB.JanSales;
 
-- How many of those orders were for an iPhone?

SELECT COUNT(orderID) AS total_iphone_sales
FROM BIT_DB.JanSales
WHERE Product = "iPhone";

-- Select the customer account numbers for all the orders that were placed in February.

SELECT acctnum
FROM BIT_DB.customers c
LEFT JOIN BIT_DB.FebSales f
ON c.order_id=f.orderID;

-- Which product was the cheapest one sold in January, and what was the price?

SELECT distinct Product, MIN(price)
FROM BIT_DB.FebSales
GROUP BY Product
ORDER BY price
LIMIT 1;

-- What is the total revenue for each product sold in January?

SELECT Product, ROUND(SUM(Quantity * price)) AS Total_Revenue
FROM BIT_DB.JanSales
GROUP BY Product;

-- Which products were sold in February at 548 Lincoln St, Seattle, WA 98101, how many of each were sold, and what was the total revenue?

SELECT Product, Quantity, ROUND(SUM(Quantity * price)) AS Revenue
FROM BIT_DB.FebSales
WHERE location LIKE "548 Lincoln St, Seattle%"
GROUP BY Product;

-- List all the products sold in Los Angeles in February, and include how many of each were sold.

SELECT distinct Product, SUM(Quantity) as total_sold
FROM BIT_DB.FebSales
WHERE location like '%Los Angeles%'
GROUP BY Product;

-- Which locations in New York received at least 3 orders in January, and how many orders did they each receive?

SELECT distinct location, count(orderID)
FROM BIT_DB.JanSales
WHERE location LIKE '%NY%'
GROUP BY location
HAVING count(orderID)>2;

-- How many of each type of headphone were sold in February?

SELECT Product, SUM(Quantity) as Total_Sold
FROM BIT_DB.FebSales
WHERE Product like '%Headphone%'
GROUP BY Product;

-- What was the average amount spent per account in February?

SELECT AVG(Quantity * price) as avg_price
FROM BIT_DB.customers c
LEFT JOIN BIT_DB.FebSales fs
ON c.order_id=fs.orderID;

-- Which product brought in the most revenue in January and how much revenue did it bring in total?

SELECT Product, SUM(Quantity * price) as revenue
FROM BIT_DB.JanSales
GROUP BY Product
ORDER BY revenue desc
LIMIT 1;
